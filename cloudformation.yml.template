AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation for Cottect
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.small
    AllowedValues:
    - t3.nano
    - t3.micro
    - t3.small
    - t3.medium
    ConstraintDescription: must be a valid EC2 instance type.
  Environment:
    Description: The Cottect environment
    Type: String
    Default: production
    AllowedValues:
    - production
    - staging
    - develop
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  Domain:
    Default: cottect.com
    Description: The domain
    Type: String
  DatabaseHost:
    Default: database.cottect.com
    Description: The database endpoint
    Type: String
    MinLength: 1
  DatabasePort:
    Default: 3306
    Description: The database port
    Type: String
    MinLength: 1
  DatabaseName:
    Default: cottect
    Description: The database name
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DatabaseUser:
    Description: The database user
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DatabasePassword:
    NoEcho: true
    Description: The database password
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
Mappings:
  AWSInstanceType2Arch:
    t3.nano:
      Arch: HVM64
    t3.micro:
      Arch: HVM64
    t3.small:
      Arch: HVM64
    t3.medium:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t3.nano:
      Arch: NATHVM64
    t3.micro:
      Arch: NATHVM64
    t3.small:
      Arch: NATHVM64
    t3.medium:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    ap-southeast-1:
      HVM64: ami-08569b978cc4dfa10
      HVMG2: ami-0be9df32ae9f92309
    ap-southeast-2:
      HVM64: ami-09b42976632b27e9b
      HVMG2: ami-0a9ce9fecc3d1daf8
Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 locked down to the load balancer
        + SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          cottect_install:
          - install_cfn
          - install_cottect
          - configure_cottect
        install_cfn:
          files:
            "/etc/cfn/cfn-hup.conf":
              content:
                Fn::Join:
                - ''
                - - "[main]\n"
                  - stack=
                  - Ref: AWS::StackId
                  - "\n"
                  - region=
                  - Ref: AWS::Region
                  - "\n"
              mode: '000400'
              owner: root
              group: root
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content:
                Fn::Join:
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - 'triggers=post.update'
                  - 'path=Resources.WebServer.Metadata.AWS::CloudFormation::Init'
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - "         --stack "
                  - Ref: AWS::StackName
                  - "         --resource WebServer "
                  - "         --configsets cottect_install "
                  - "         --region "
                  - Ref: AWS::Region
                  - "\n"
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - "/etc/cfn/cfn-hup.conf"
                - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
        install_cottect:
          rpm:
            epel: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          packages:
            yum:
              php72: []
              php72-mysql: []
              composer: []
              nginx: []
              git: []
          sources:
            "/var/www/html": "https://github.com/cottect/cottect/tarball/master"
          files:
            "/tmp/create-cottect-config":
              content:
                Fn::Join:
                - ''
                - - "#!/bin/bash -xe\n"
                  - 'cp /var/www/html/cottect/.env.dist /var/www/html/cottect/.env'
                  - sed -i "s/'database_host_here'/'
                  - Ref: DatabaseHost
                  - '''/g" .env'
                  - sed -i "s/'database_port_here'/'
                  - Ref: Databaseport
                  - '''/g" .env'
                  - sed -i "s/'database_name_here'/'
                  -   Ref: DatabaseName
                  - '''/g" .env'
                  - sed -i "s/'database_username_here'/'
                  -   Ref: DatabaseUsername
                  - '''/g" .env'
                  - sed -i "s/'database_password_here'/'
                  -   Ref: DatabasePassword
                  - '''/g" .env'
              mode: '000500'
              owner: root
              group: root
        configure_cottect:
          commands:
            01_composer_install:
              command: "composer install"
              cwd: "/var/www/html/cottect"
            02_database_migration:
              command: "php bin/console doctrine:schema:create"
              cwd: "/var/www/html/cottect"
            03_assets_install:
              command: "yarn install && yarn encore production"
              cwd: "/var/www/html/cottect"
            04_configure_wordpress:
              command: "/tmp/create-cottect-config"
              cwd: "/var/www/html/cottect"
    Properties:
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: InstanceType
          - Arch
      InstanceType:
        Ref: InstanceType
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      KeyName:
        Ref: KeyName
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - 'yum update -y aws-cfn-bootstrap'
            - "/opt/aws/bin/cfn-init -v "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource WebServer "
            - "         --configsets cottect_install "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
            - "/opt/aws/bin/cfn-signal -e $? "
            - "         --stack "
            - Ref: AWS::StackName
            - "         --resource WebServer "
            - "         --region "
            - Ref: AWS::Region
            - "\n"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
  DnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref 'Domain'
      Comment: DNS name for my instance.
      Name: !Ref 'Domain'
      Type: A
      TTL: '60'
      ResourceRecords:
      - !GetAtt WebServer.PublicIp
Outputs:
  WebsiteURL:
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - WebServer
          - PublicDnsName
    Description: Cottect
